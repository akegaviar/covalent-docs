# This is a basic workflow that is manually triggered

name: CI

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - uses: borales/actions-yarn@v2.3.0
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      with:
        cmd: install

    - name: Bootstrap build dir
      run: |
        rm -rf .docs
        cp -r node_modules/cloudflare-docs-engine/ .docs
        cd .docs
        rm -rf node_modules/
        yarn install

    - name: Build site
      run: ./s/docs-build

    - name: Upload site
      env:
        GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      run: |
        ./s/upload-to-gcs
